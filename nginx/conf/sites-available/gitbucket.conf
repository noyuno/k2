# vi: set filetype=nginx :

server {
    listen 80;
    server_name git.k2.noyuno.space;
    
    
            location ^~ /.well-known/acme-challenge/ {
                root /var/www/cert/;
            }
        
    location / {
        return 301 https://$host$request_uri;
    }

}

server {
    listen 443 ssl;
    server_name git.k2.noyuno.space;
    
    ssl on;

    
    ssl_certificate /etc/letsencrypt/live/noyuno.space/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/noyuno.space/privkey.pem;

    
    charset UTF-8;
    charset_types text/css application/json text/plain application/javascript;
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Headers' 'Content-Type,Accept';
    add_header 'Access-Control-Allow-Method' 'GET, POST, OPTIONS, PUT, DELETE';
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_redirect off;
    proxy_max_temp_file_size 0;

    location /.well-known {
        alias /var/www/html/.well-known;
    }

    location / {
        proxy_pass http://localhost:8080;
        proxy_connect_timeout   150;
        proxy_send_timeout      100;
        proxy_read_timeout      100;
        proxy_buffers           4 32k;
        client_max_body_size    500m; # Big number is we can post big commits.
        client_body_buffer_size 128k;

    }

    location /robots.txt {
        alias /var/www/html/robots-disallow.txt;
    }

    location /assets/ {
        proxy_pass              http://localhost:8080/assets/;
        proxy_cache             cache;
        proxy_cache_key         $host$uri$is_args$args;
        proxy_cache_valid       200 301 302 1d;
        expires                 7d;
        gzip on;
        gzip_types text/html text/css application/javascript application/json;
    }

    location /console/ {
        deny all;
    }
}
