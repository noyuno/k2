version: "3"
services:
    nginx:
        image: steveltn/https-portal:1
        links:
            - php7
            - gitbucket
            - minio
            - wekan
        ports:
            - 80:80
            - 443:443
        restart: always
        environment:
            STAGE: staging
            DOMAINS: |
                ${DOMAIN},
                ${HOST}.${DOMAIN},
                git.${DOMAIN} -> http://gitbucket:8080,
                s3.${DOMAIN} -> http://minio:9000,
                board.${DOMAIN} -> http://wekan:8080,
                anime.${DOMAIN}
            SERVER_NAMES_HASH_BUCKET_SIZE: 64
        volumes:
            - ./data/cert:/var/lib/https-portal
            - ./nginx:/var/lib/nginx-conf:ro
            - ./html:/var/www/vhosts
            - ./animed/html:/var/www/vhosts/anime.${DOMAIN}
            - ./data/animed:/var/www/vhosts/anime.${DOMAIN}/data

    php7:
        image: php:7-fpm-alpine
        restart: always
        volumes:
            - ./nginx/html:/var/www/html

    gitbucket:
        image: gitbucket/gitbucket:latest
        restart: always
        volumes:
            - ./data/gitbucket/data:/gitbucket
        links:
            - gitbucket-db
        environment:
            GITBUCKET_DB_URL: 'jdbc:postgresql://gitbucket-db/gitbucket'
            GITBUCKET_DB_USER: gitbucket
            GITBUCKET_DB_PASSWORD: ${GITBUCKET_DB_PASSWORD}

    gitbucket-db:
        image: postgres:10.5-alpine
        restart: always
        environment:
            POSTGRES_USER: gitbucket
            POSTGRES_PASSWORD: ${GITBUCKET_DB_PASSWORD}
        volumes:
            - ./data/gitbucket/postgres:/var/lib/postgresql/data

    gitbucket-db-backup:
        build: postgres-backup-s3
        links:
            - gitbucket-db
        environment:
            S3_REGION: ap-northeast-1
            S3_ACCESS_KEY_ID: ${AWS_ACCESS_KEY}
            S3_SECRET_ACCESS_KEY: ${AWS_SECRET_KEY}
            S3_BUCKET: ${S3_BUCKET}
            S3_PREFIX: backup/db/gitbucket
            POSTGRES_HOST: gitbucket-db
            POSTGRES_DATABASE: gitbucket
            POSTGRES_USER: gitbucket
            POSTGRES_PASSWORD: ${GITBUCKET_DB_PASSWORD}
            POSTGRES_EXTRA_OPTS: '--schema=public --blobs'
            SCHEDULE: '@daily'

    minio:
        image: minio/minio:latest
        environment:
            MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
            MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
        command: server /data
        volumes:
            - ./data/minio:/data

    wekan:
        image: quay.io/wekan/wekan:latest
        restart: always
        links:
            - wekan-db
        environment:
            ROOT_URL: https://board.${DOMAIN}
            MONGO_URL: mongodb://wekan-db:27017/wekan
            WITH_API: "true"

    wekan-db:
        image: mongo:latest
        restart: always
        expose:
            - 27017
        command: mongod --smallfiles --oplogSize 128
        volumes:
            - ./data/wekan/mongodb:/data/db
            - ./data/wekan/mongodb-dump:/dump

    backupd:
        build: backupd
        restart: always
        environment:
            ACCESS_KEY: ${AWS_ACCESS_KEY}
            SECRET_KEY: ${AWS_SECRET_KEY}
            S3_PATH: s3://${S3_BUCKET}/backup/files/
            CRON_SCHEDULE: "0 4 * * *"
        volumes:
            - ./data:/data:ro

    animed:
        build: animed
        restart: always
        volumes:
            - ./data/animed:/data

    discordbot:
        build: discordbot
        restart: always
        expose:
            - "80"
        volumes:
            - ./data/discordbot:/data/discordbot/out
        environment:
            DEPLOY: /data/discordbot
            YAHOO_APPID: ${YAHOO_APPID}
            ANIMEJSON: /data/animed/anime.json
            DISCORD_TOKEN: ${DISCORD_TOKEN}
            DISCORD_CHANNEL_NAME: ${DISCORD_CHANNEL_NAME}

    squid:
        build: squid
        restart: always
        ports:
            - 3128:3128

