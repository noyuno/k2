version: "3"
services:
    nginx:
        image: steveltn/https-portal:1
        links:
            - php7
            - gitbucket
            - minio
            - wekan
            - grafana
            - animed
            - portainer
        ports:
            - 80:80
            - 443:443
        restart: always
        environment:
            STAGE: production
            DOMAINS: |
                ${DOMAIN},
                ${HOST}.${DOMAIN},
                git.${DOMAIN} -> http://gitbucket:8080,
                s3.${DOMAIN} -> http://minio:9000,
                board.${DOMAIN} -> http://wekan:8080,
                anime.${DOMAIN},
                status.${DOMAIN} -> http://grafana:3000,
                portainer.${DOMAIN} -> http://portainer:9000,
                photos.${DOMAIN} -> http://photod:80
            SERVER_NAMES_HASH_BUCKET_SIZE: 64
            FORCE_RENEW: 'false'
            CLIENT_MAX_BODY_SIZE: '15g'
        volumes:
            - ./data/cert:/var/lib/https-portal
            - ./nginx:/var/lib/nginx-conf:ro
            - ./html:/var/www/vhosts
            - ./animed/html:/var/www/vhosts/anime.${DOMAIN}:ro
            - ./data/animed:/var/www/vhosts/anime.${DOMAIN}/data

    php7:
        image: php:7-fpm-alpine
        restart: always
        volumes:
            - ./nginx/html:/var/www/html

    gitbucket:
        image: gitbucket/gitbucket:latest
        restart: always
        volumes:
            - ./data/gitbucket/data:/gitbucket
        links:
            - gitbucket-db
        environment:
            GITBUCKET_DB_URL: 'jdbc:postgresql://gitbucket-db/gitbucket'
            GITBUCKET_DB_USER: gitbucket
            GITBUCKET_DB_PASSWORD: ${GITBUCKET_DB_PASSWORD}

    gitbucket-db:
        image: postgres:10.5-alpine
        restart: always
        environment:
            POSTGRES_USER: gitbucket
            POSTGRES_PASSWORD: ${GITBUCKET_DB_PASSWORD}
        volumes:
            - ./data/gitbucket/postgres:/var/lib/postgresql/data

    gitbucket-db-backup:
        build: postgres-backup-s3
        restart: always
        links:
            - gitbucket-db
            - discordbot
        environment:
            CONTAINER_NAME: gitbucket-db-backup
            S3_REGION: ap-northeast-1
            S3_ACCESS_KEY_ID: ${AWS_ACCESS_KEY}
            S3_SECRET_ACCESS_KEY: ${AWS_SECRET_KEY}
            S3_BUCKET: ${S3_BUCKET}
            S3_PREFIX: backup/db/gitbucket
            POSTGRES_HOST: gitbucket-db
            POSTGRES_DATABASE: gitbucket
            POSTGRES_USER: gitbucket
            POSTGRES_PASSWORD: ${GITBUCKET_DB_PASSWORD}
            POSTGRES_EXTRA_OPTS: '--schema=public --blobs'
            SCHEDULE: '23 48 17 * * 0,2,4' # 2:48: sec min hour day month week

    minio:
        image: minio/minio:latest
        restart: always
        environment:
            MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
            MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
        command: server /data
        volumes:
            - ./data/minio:/data

    wekan:
        image: quay.io/wekan/wekan:latest
        restart: always
        links:
            - wekan-db
        environment:
            ROOT_URL: https://board.${DOMAIN}
            MONGO_URL: mongodb://wekan-db:27017/wekan
            WITH_API: "true"

    wekan-db:
        image: mongo:latest
        restart: always
        expose:
            - 27017
        command: mongod --smallfiles --oplogSize 128
        volumes:
            - ./data/wekan/mongodb:/data/db
            - ./data/wekan/mongodb-dump:/dump

    backupd:
        build: backupd
        restart: always
        links:
            - discordbot
        environment:
            ACCESS_KEY: ${AWS_ACCESS_KEY}
            SECRET_KEY: ${AWS_SECRET_KEY}
            S3_PATH: s3://${S3_BUCKET}/backup/files/
            CRON_SCHEDULE: "46 17 * * 0,2,4" # 2:46
        volumes:
            - ./:/data:ro
            - ./backupd:/opt/backupd:ro
            - ./logs/backupd:/logs/backupd
        #command: no-cron

    animed:
        build: animed
        restart: always
        volumes:
            - ./data/animed:/data

    discordbot:
        image: noyuno/discordbot:latest
        restart: always
        expose:
            - "80"
        links:
            - cadvisor
            - manet
        volumes:
            - ./data/discordbot:/data/discordbot
            - ./logs/discordbot:/logs/discordbot
            - ./discordbot:/opt/discordbot
        environment:
            DEPLOY: /opt/discordbot
            DISCORD_TOKEN: ${DISCORD_TOKEN}
            DISCORD_CHANNEL_NAME: ${DISCORD_CHANNEL_NAME}
            GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
            DARK_SKY_API_KEY: ${DARK_SKY_API_KEY}
            LOCATION: ${LOCATION}
            CADVISOR: 'cadvisor:8080'
            MANET: 'manet:8891'
            XRAIN_LON: ${XRAIN_LON}
            XRAIN_LAT: ${XRAIN_LAT}
            XRAIN_ZOOM: ${XRAIN_ZOOM}
            CONTAINERS: 'nginx,php7,gitbucket,gitbucket-db,gitbucket-db-backup,minio,wekan,wekan-db,backupd,animed,prometheus,node-exporter,grafana,manet,portainer,photod'

    prometheus:
        image: prom/prometheus
        restart: always
        volumes:
            - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        expose:
            - 9090
        links:
            - cadvisor
            - node-exporter
        environment:
            VIRTUAL_HOST: status.${HOST}.${DOMAIN}
            #LETSENCRYPT_HOST: prometheus.prometheus.example.com
            #LETSENCRYPT_EMAIL: hoge@example.com

    cadvisor:
        image: google/cadvisor:latest
        restart: always
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
        expose:
            - 8080

    node-exporter:
        image: prom/node-exporter
        restart: always
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        expose:
            - 9100

    grafana:
        image: grafana/grafana
        restart: always
        expose:
            - 3000
        user: "0"
        links:
            - prometheus
            - cadvisor
            - node-exporter
        volumes:
            - ./data/grafana:/var/lib/grafana
        environment:
            GF_SECURITY_ADMIN_USER: ${GRAFANA_USER}
            GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
            GF_USERS_ALLOW_SIGN_UP: "false"
            GF_USERS_ALLOW_ORG_CREATE: "false"
            VIRTUAL_HOST: ${HOST}.${DOMAIN}
            #LETSENCRYPT_HOST: prometheus.example.com
            #LETSENCRYPT_EMAIL: hoge@example.com
        # import -> 395, 22, 893

    manet:
        image: bobey/manet
        expose:
            - "8891"
        command: startup.sh --engine=phantomjs
        restart: always

    portainer:
        image: portainer/portainer
        command: -H unix:///var/run/docker.sock
        restart: always
        expose:
            - "9000"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./data/portainer:/data

    photod:
        image: noyuno/photod:latest
        restart: always
        expose:
            - "80"
        links:
            - discordbot
            - nginx
        environment:
            GOOGLE_OAUTH_CLIENT: ${GOOGLE_OAUTH_CLIENT}
            GOOGLE_OAUTH_SECRET: ${GOOGLE_OAUTH_SECRET}
            BASE_URL: "https://photos.${DOMAIN}"
            DISCORDBOT: "discordbot"
            AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
            AWS_SECRET_KEY: ${AWS_SECRET_KEY}
            S3_BUCKET: ${S3_BUCKET}
            S3_PREFIX: mirror/photod
            AWS_REGION: ${AWS_REGION}
            SCHEDULE_TIME: "17:51" # requires zero fill 02:51
            SCHEDULE_WEEKDAY: "0,1,2,3,4,5,6"
            #ONESHOT: 1
        volumes:
            - ./data/photod:/data/photod
            - ./logs/photod:/logs/photod
            - ./photod:/opt/photod:ro

    rclone-drive:
        image: noyuno/ob_bulkstash
        links:
            - discordbot
        environment:
            RCLONE_CROND_SCHEDULE: "02 18 * * *" # 03:02
            RCLONE_CROND_SOURCE_PATH: "drive:"
            RCLONE_CROND_DESTINATION_PATH: "/data"
            RCLONE_CROND_OPTIONS: "--transfers 1 --buffer-size 1M --use-mmap -v"
            NAME: "rclone-drive"
        cap_add:
            - MKNOD
            - SYS_ADMIN
        #restart: always
        security_opt:
            - apparmor:unconfined
        tty: true
        ulimits:
            nproc: 65535
            nofile:
                soft: 49999
                hard: 99999
        #command: "rclone --transfers 1 --buffer-size 1M --use-mmap -v copy drive: s3:${S3_BUCKET}/mirror/drive"
        command: "bash"
        volumes:
            - ./data/rclone:/root/.config/rclone
            - ./tmp/rclone:/data
            - ./rclone:/opt/rclone
            - ./logs/rclone:/logs
            - ./rclone/monit.d:/etc/monit.d
        # docker run --rm -it -v $(pwd)/data/rclone:/root/.config/rclone openbridge/ob_bulkstash rclone config
        # n s3 4 1 <enter> <key> <secret> 11 <enter> 11 <enter> <enter> <enter> <enter> n y
        # n drive 12 <id> <secret> 2 <enter> <enter> n n <paste> n y
        # q

    rclone-s3:
        image: noyuno/ob_bulkstash
        links:
            - discordbot
        environment:
            RCLONE_CROND_SCHEDULE: "02 00 * * *" # 09:02
            RCLONE_CROND_SOURCE_PATH: "/data"
            RCLONE_CROND_DESTINATION_PATH: "s3:k2b/mirror/drive"
            RCLONE_CROND_OPTIONS: "--transfers 1 --buffer-size 1M --use-mmap -v"
            NAME: "rclone-s3"
        cap_add:
            - MKNOD
            - SYS_ADMIN
        #restart: always
        security_opt:
            - apparmor:unconfined
        tty: true
        ulimits:
            nproc: 65535
            nofile:
                soft: 49999
                hard: 99999
        #command: "rclone --transfers 1 --buffer-size 1M --use-mmap -v copy drive: s3:${S3_BUCKET}/mirror/drive"
        command: "bash"
        command: "/opt/rclone/rclone.sh run"
        volumes:
            - ./data/rclone:/root/.config/rclone
            - ./tmp/rclone:/data
            - ./rclone:/opt/rclone
            - ./logs/rclone:/logs
            - ./rclone/monit.d:/etc/monit.d
            